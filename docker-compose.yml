services:
  mongo:
    image: mongo:7.0
    pull_policy: always
    env_file:
      - .env
    healthcheck:
      test: mongosh --quiet "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@127.0.0.1:27017/?authSource=admin" --eval 'db.runCommand("ping").ok'
      interval: 5s
      timeout: 5s
      retries: 60
  mq1:
    image: rabbitmq:latest
    pull_policy: always
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 60
  ampath:
    image: amlight/kytos-sdx:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source  /sdx-end-to-end-tests/env/ampath.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        rsyslogd
        kytosd --database mongodb
        tail -f /dev/null
  sax:
    image: amlight/kytos-sdx:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source  /sdx-end-to-end-tests/env/sax.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        rsyslogd
        kytosd --database mongodb
        tail -f /dev/null
  tenet:
    image: amlight/kytos-sdx:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source  /sdx-end-to-end-tests/env/tenet.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        rsyslogd
        kytosd --database mongodb
        tail -f /dev/null
  ampath-lc:
    image: awsdx/sdx-lc:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
      mq1:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source  /sdx-end-to-end-tests/env/ampath-lc.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        python3 /sdx-end-to-end-tests/wait-rabbit.py
        python3 -m uvicorn sdx_lc.app:asgi_app --host 0.0.0.0 --port 8080
    command: [""]
  sax-lc:
    image: awsdx/sdx-lc:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
      mq1:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source  /sdx-end-to-end-tests/env/sax-lc.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        python3 /sdx-end-to-end-tests/wait-rabbit.py
        python3 -m uvicorn sdx_lc.app:asgi_app --host 0.0.0.0 --port 8080
    command: [""]
  tenet-lc:
    image: awsdx/sdx-lc:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
      mq1:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source /sdx-end-to-end-tests/env/tenet-lc.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        python3 /sdx-end-to-end-tests/wait-rabbit.py
        python3 -m uvicorn sdx_lc.app:asgi_app --host 0.0.0.0 --port 8080
    command: [""]
  sdx-controller:
    image: awsdx/sdx-controller:latest
    pull_policy: always
    env_file:
      - .env
    volumes:
      - .:/sdx-end-to-end-tests
    depends_on:
      mongo:
        condition: service_healthy
      mq1:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        # actual steps to setup the service
        source /sdx-end-to-end-tests/env/sdx-controller.env
        python3 /sdx-end-to-end-tests/setup-mongo-auth.py
        python3 /sdx-end-to-end-tests/wait-rabbit.py
        python3 -m uvicorn sdx_controller.app:asgi_app --host 0.0.0.0 --port 8080
    command: [""]
  mininet:
    image: italovalcy/mininet:latest
    pull_policy: always
    privileged: true
    volumes:
      - .:/sdx-end-to-end-tests
      - /lib/modules:/lib/modules
      - ./e2e-output:/tmp
    working_dir: /sdx-end-to-end-tests
    depends_on:
      - ampath
      - sax
      - tenet
    environment:
      PYTHONDONTWRITEBYTECODE: "1"
    entrypoint:
      - "/bin/bash"
      - "-x"
      - "-c"
      - |
        service openvswitch-switch start
        apt-get update && apt-get install -y tmux jq python3-pytest python3-requests
        python3 -m pip install -r requirements.txt
        tail -f /dev/null
